1. 개요
  - 목적: 단일 HTML 파일로 실행되는 회피형 액션 게임. 플레이어는 WASD/Space로 조작하며, 위/측면에서 내려오거나 스윕되는 다양한 장애물을 피해서 체력을 유지하고 웨이브를 진행·클리어한다.
  - 범위: PC 브라우저(Chrome/Edge 최신), 로컬 파일 더블클릭만으로 실행. 서버/외부 에셋 불필요(CDN의 Phaser 제외).
  - 산출물: index.html 1개 파일.
  - 2. 기술 스택 & 런타임
  - 엔진: Phaser 3.60.x (신규 파티클 API 사용)
  - 물리: Arcade Physics
  - 자원: 모든 텍스처/이펙트는 코드로 생성(도형 기반). 외부 이미지/오디오 없음.
  - 의존성:
  - <script src="https://cdn.jsdelivr.net/npm/phaser@3.60.0/dist/phaser.min.js"></script>

3. 게임 플레이
  - 조작
  - 이동: A/D (또는 ←/→)
  - 점프: Space (또는 ↑)
  - 일시정지: P 또는 ESC (토글)
  - 재시작: R (게임오버 화면에서)
  - 목표: 웨이브 타이머가 끝날 때까지 생존. HP 0이 되면 게임오버.
  - 피격 처리: HP 감소 → 무적 시간(i-frames) 0.8초 → 화면 플래시/카메라 흔들림/파티클 이펙트.

4. 웨이브 시스템
  - 진행: Ready(카운트다운 3s) → Playing(진행 타이머) → Clear(보상/연출 1.8s) → 다음 웨이브
  - 파라미터 스케일(웨이브 n 기준, 예시):
  - 진행 시간: 24 + min(11, n) 초
  - 스폰 간격: 900ms + (n-1)*(-60ms) 하한 350ms
  - 낙하 속도: 220px/s + (n-1)*15px/s
  - 동시 활성 수: 8 + (n-1) 상한 18
  - 클리어 보상: 점수 + n*10, HP 회복 +5(최대 HP 제한)

5. 장애물/공격 패턴
  - 공통: 플레이어 충돌 시 데미지 부여(무적 중엔 무시), 화면 밖 벗어나면 비활성화/반환.
  - 타입 & 특성
  - meteor: 직하 강하, 중간 크기/속도, 표준 데미지
  - shuriken: 소형·고속 낙하, 회전
  - zigzag: X속도 포함(좌우 진동), 회전
  - puddle: 대형·저속, 바닥 접근 시 판정 넓음(잔류물은 별도 Hazard로 표현 가능)
  - homing: 하강 중 좌우로 플레이어를 완만히 추적
  - sine: 사인 곡선 궤도(진폭/주기 고정)
  - splitter: 중간 지점에서 파편 2개로 분열(각각 속도/데미지 소형)
  - bomb: 바닥 충돌 시 원형 폭발(AoE Hazard) 생성(수명 제한)
  - laser(수직): 사전 경고선 표시 후 얇은 수직 레이저가 빠르게 낙하(중력 무시)
  - sweep(수평): 임의 Y에서 경고선 표시 후 좌→우 또는 우→좌로 화면을 쓸고 지나감(중력 무시)
  - 데미지 예시(기본값): meteor 10, shuriken 7, zigzag 12, puddle 15, homing 11, sine 10, splitter 10, shard 6, bomb 14, laser 18, sweep 20
  ※ CFG로 조정 가능.

6. UI/HUD
  - 상단 좌측: 점수, 최고점수(localStorage)
  - 상단 우측: 웨이브 번호, 잔여 시간
  - 하단 좌측: HP 바(색상: 초록/노랑/빨강 + 흰색 테두리)
  - 중앙: 웨이브 안내/카운트다운/클리어 메시지, 게임오버/재시작 버튼
  - 이펙트: 피격 시 붉은 플래시, 카메라 흔들림, 파편 파티클

7. 비기능 요구사항(성능/최적화)
  - 풀링:
  - 장애물: Arcade Group 기반 maxSize(기본 80), get/activate/deactivate 재사용
  - Hazard(AoE): 별도 Group maxSize(기본 24)
  - 충돌: physics.overlap 단일 콜백(프레임당 Bounds 수동루프 제거)
  - 파티클: Phaser 3.60 신 API로 Emmiter 1개 재사용, explode 사용(지속 방출 없음)
  - 정리: 화면 밖/수명 종료 시 즉시 비활성화 및 반환
  - 물리: setDisplaySize 후 body.setSize(..., true)로 히트박스 동기화
  - 상한: 활성 장애물 수(웨이브별 cap), 파티클 수 제한(폭발 20~24개)
  - 목표 FPS: 60(일반 PC 기준 55 FPS 이상 유지)

8. 안정성/예외 처리
  - 플레이어가 바닥 아래로 내려가지 않도록 월드 경계 설정.
  - 무적 시간 중 중복 데미지 차단.
  - 스폰 간격 하한/동시 수 상한 유지로 즉사성 패턴 방지.
  - 타이머/이벤트는 상태 전환 시 명시 해제(메모리 누수 방지).

9. 저장/설정
  - 최고점수: localStorage.highScore에 정수로 저장.
  - 설정 값: 상수 객체 CFG로 일괄 관리(화면 크기, 속도/간격, 웨이브 식, 풀 크기 등).
  - CFG.canvas, CFG.player, CFG.hp, CFG.score, CFG.spawn, CFG.wave, CFG.pool

10. 상태 흐름/아키텍처
  - 상태: menu → ready → playing → clear → (next ready), gameover, pause(토글)
  - 주요 모듈
  - Spawner: 웨이브 기반 가중치로 타입 선정, Group에서 get 후 세팅
  - Obstacle Behavior: kind별 AI(유도/사인/분열/폭탄 등)
  - Hazard Manager: AoE 수명 관리
  - Damage System: overlap 콜백 → applyDamage() → i-frames/이펙트
  - Wave Manager: 타이머, 파라미터 스케일, 보상/전환

11. 브라우저/호환성
  - 대상: Chrome/Edge 최신(데스크톱)
  - 실행: 파일 더블클릭로 로컬 실행 가능(HTTPS/서버 불필요)
  - 모바일: 범위 외(작동은 가능하나 UI 최적화 대상 아님)

12. 테스트 시나리오(요약)
  - 이동/점프: A/D/Space 반응, 바닥 충돌/월드 경계 정상
  - 피격/무적: 연속 충돌 시 단일 데미지만 반영, i-frames 종료 후 재피격 가능
  - 장애물별 동작: homing 추적, sine 곡선, splitter 분열/파편, bomb AoE 생성, laser/sweep 경고 후 발사
  - 웨이브 전환: 1→2→… 진행, 카운트다운/보상/파라미터 스케일 정상
  - 일시정지: P/ESC 토글, 재개 시 타이머/스폰 정상 복귀
  - 클리어/게임오버: 클리어 보상/표시, HP 0 시 게임오버/재시작 정상
  - 성능: 활성 수 상한 근처에서 FPS 55+ 유지, 콘솔 에러 0건
  - 저장: 최고점수 갱신/유지 확인(localStorage)

13. 수용(완료) 기준
  - 단일 index.html만으로 로컬 실행 시 콘솔 에러 0.
  - 웨이브 5 이상까지 모든 패턴 최소 1회 이상 출현/정상 동작.
  - FPS 55 이상, 입력/충돌/전환 지연 체감 없음.
  - 무적/데미지/HP 바/점수/최고점수 표시 정확.
  - 일시정지, 재시작, 다음 웨이브 전환 모두 정상.

14. 성능 튜닝 가이드(운영 파라미터)
  - 난이도 완화: CFG.spawn.maxCap ↓, CFG.spawn.minInterval ↑, CFG.spawn.speedStep ↓
  - 난이도 상승: 위 반대로 조정, 특정 패턴 가중치(weights) 상향
  - 부하 감소: CFG.pool.obstacles/hazards ↓, 파티클 quantity/explode 값 ↓

15. 향후 확장(옵션)
  - 2단 점프/급하강(S키), 체력 아이템/버프, 보스 패턴(예: 다중 스윕 + 탄막), 사운드 효과, 모바일 가상패드, 색약 모드 등.